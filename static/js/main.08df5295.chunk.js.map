{"version":3,"sources":["components/App/App.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/ContactForm/ContactForm.module.css","components/Filter/Filter.js","components/ContactForm/ContactForm.js","components/ContactList/ContactItem/ContactItem.js","components/ContactList/ContactList.js","components/App/App.js","index.js","components/ContactList/ContactItem/ContactItem.module.css"],"names":["module","exports","Filter","value","onChange","className","s","input","type","name","ContactForm","state","number","handleNameChenge","e","currentTarget","setState","handleSubmit","preventDefault","props","onSubmit","this","form","text","pattern","title","required","btn","Component","ContactItem","id","onDeleteContact","contactName","contactNumber","contactBtn","onClick","ContactList","contacts","contactList","map","contact","App","filter","addContact","shortid","generate","some","el","alert","deleteContacts","idContact","prevState","chengeFilter","getVisibleContacts","normalizedFilter","toLowerCase","includes","JSON","parse","localStorage","getItem","prevProps","setItem","stringify","visibleContacts","container","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.08df5295.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3oa3M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__2O7de\",\"contact\":\"ContactList_contact__M8tO5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__1JmI4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__37gtz\",\"text\":\"ContactForm_text__3S416\",\"input\":\"ContactForm_input__2CgKq\",\"btn\":\"ContactForm_btn__3eg92\"};","import PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <label>\n      Find contacts by name\n      <input\n        className={s.input}\n        type=\"text\"\n        name=\"filter\"\n        value={value}\n        onChange={onChange}\n      />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  };\n\n  handleNameChenge = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.props.onSubmit(this.state);\n\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <form className={s.form} onSubmit={this.handleSubmit}>\n        <p className={s.text}>Name</p>\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={this.handleNameChenge}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n        <p className={s.text}>Number</p>\n        <input\n          className={s.input}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={this.handleNameChenge}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n        <button className={s.btn} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import PropTypes from 'prop-types';\nimport s from './ContactItem.module.css';\n\nconst ContactItem = ({ id, name, number, onDeleteContact }) => {\n  return (\n    <>\n      <p className={s.contactName}>{name}:</p>\n      <p className={s.contactNumber}>{number}</p>\n      <button className={s.contactBtn} onClick={() => onDeleteContact(id)}>\n        delete\n      </button>\n    </>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactItem;\n","import PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\nimport ContactItem from './ContactItem';\n\nconst ContactList = ({ contacts, onDeleteContact }) => {\n  return (\n    <ul className={s.contactList}>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id} className={s.contact}>\n          <ContactItem\n            id={id}\n            name={name}\n            number={number}\n            onDeleteContact={onDeleteContact}\n          />\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import shortid from 'shortid';\nimport s from './App.module.css';\nimport React, { Component } from 'react';\nimport Filter from '../Filter';\nimport ContactForm from '../ContactForm';\nimport ContactList from '../ContactList';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  addContact = ({ name, number }) => {\n    const contact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n    const checkingContacts = el => el.name === name;\n\n    if (this.state.contacts.some(checkingContacts)) {\n      alert(`${name} is alreaby in contacts`);\n      return;\n    }\n\n    this.setState(({ contacts }) => ({\n      contacts: [contact, ...contacts],\n    }));\n  };\n\n  deleteContacts = idContact => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== idContact),\n    }));\n  };\n\n  chengeFilter = e => {\n    const { value } = e.currentTarget;\n    this.setState({ filter: value });\n  };\n\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  componentDidMount() {\n    const contacts = JSON.parse(localStorage.getItem('contacts'));\n    if (contacts) {\n      this.setState({ contacts: contacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <div className={s.container}>\n        <h1 className={s.title}>Phonebook</h1>\n        <ContactForm onSubmit={this.addContact} />\n\n        <h2>Contacts</h2>\n        <Filter value={filter} onChange={this.chengeFilter} />\n        <ContactList\n          contacts={visibleContacts}\n          onDeleteContact={this.deleteContacts}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactName\":\"ContactItem_contactName__-Bfav\",\"contactNumber\":\"ContactItem_contactNumber__1UZIB\",\"contactBtn\":\"ContactItem_contactBtn__14Ezm\"};"],"sourceRoot":""}